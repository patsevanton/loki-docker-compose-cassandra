#version: "3.8"

services:

  init:
    image: grafana/loki:2.6.1
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/loki"
    volumes:
      - ./loki:/loki
    networks:
      - loki

  cassandra:
    image: bitnami/cassandra:3.11.11
    restart: always
    ports:
      - "9042:9042"
    volumes:
      - cassandra:/bitnami
    healthcheck:
      test: ["CMD", "cqlsh", "-u", "cassandra", "-p", "cassandra", "-e", "SELECT table_name FROM system_schema.tables WHERE keyspace_name='loki';"]
      interval: 5s
      timeout: 5s
      retries: 10
    environment:
      CASSANDRA_USER: cassandra
      CASSANDRA_PASSWORD: cassandra
      CASSANDRA_CLUSTER_NAME: loki
      CASSANDRA_DATACENTER: dc1
    networks:
      loki:
        aliases:
          - cassandra

  log-generator:
    image: mingrammer/flog
    restart: always
    command:
      - --loop
      - --format=json
      - --number=10
      - --delay=100ms
      - --output=/var/log/generated-logs.txt
      - --overwrite
      - --type=log
    depends_on:
      promtail:
        condition: service_started
    volumes:
      - ./loki/:/var/log/

  promtail:
    image: grafana/promtail:2.6.1
    restart: always
    volumes:
      - ./loki/:/var/log/
      - ./config:/etc/promtail/
    ports:
      - "9080:9080"
    command: -config.file=/etc/promtail/promtail.yaml
    depends_on:
      loki-gateway:
        condition: service_started
      loki-frontend:
        condition: service_started
      loki-read:
        condition: service_started
      loki-write:
        condition: service_started
    networks:
      loki:
        aliases:
          - promtail

  minio:
    image: minio/minio
    restart: always
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        mkdir -p /data/loki-ruler &&
        minio server /data
    environment:
      - MINIO_ACCESS_KEY=loki
      - MINIO_SECRET_KEY=supersecret
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    ports:
      - "9000:9000"
    volumes:
      - ./.data/minio:/data
    networks:
      loki:
        aliases:
          - minio

  loki-gateway:
    image: nginx:1.19
    restart: always
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
      - "3100"
    networks:
      loki:
        aliases:
          - loki-gateway
    depends_on:
      loki-frontend:
        condition: service_started
      loki-read:
        condition: service_started
      loki-write:
        condition: service_started

  loki-frontend:
    image: grafana/loki:2.6.1
    restart: always
    volumes:
      - ./config:/etc/loki/
    ports:
      - "3100"
    command: "-config.file=/etc/loki/loki.yaml -target=query-frontend -frontend.downstream-url=http://loki-read:3100"
    networks:
      loki:
        aliases:
          - loki-frontend
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      cassandra:
        condition: service_healthy

  loki-read:
    image: grafana/loki:2.6.1
    restart: always
    volumes:
      - ./config:/etc/loki/
    ports:
      - "3100"
      - "7946"
    command: "-config.file=/etc/loki/loki.yaml -target=read"
    networks:
      loki:
        aliases:
          - loki-read
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      cassandra:
        condition: service_healthy

  loki-write:
    image: grafana/loki:2.6.1
    restart: always
    volumes:
      - ./config:/etc/loki/
    ports:
      - "3100"
      - "7946"
    command: "-config.file=/etc/loki/loki.yaml -target=write"
    networks:
      loki:
        aliases:
          - loki-write
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      cassandra:
        condition: service_healthy

  grafana:
    image: grafana/grafana:9.1.6
    restart: always
    ports:
      - "3000:3000"
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    volumes:
      - ./config/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana:/var/lib/grafana
    networks:
      - loki

volumes:
  cassandra:
  grafana:

networks:
  loki:
    driver: bridge