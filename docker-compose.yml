version: '3.8'

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "1m"
    max-file: "1"
    tag: "{{.Name}}"

services:
  redis:
    container_name: redis
    image: redis:7.0.5-alpine
    command:
      - 'redis-server'
      - '--databases 2'
      - '--save 900 1'
      - '--save 300 10'
      - '--save 60 10000'
      - '--maxmemory 6gb'
      - '--maxmemory-policy allkeys-lru'
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      loki:
        aliases:
          - redis
    logging: *default-logging

  loki:
    image: grafana/loki:2.3.0
    container_name: loki
    depends_on:
      redis:
        condition: service_started
      cassandra:
        condition: service_healthy
    volumes:
      - ./local-config.yaml:/etc/loki/local-config.yaml
      - loki:/loki
    ports:
      - "3100:3100"
    restart: always
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      loki:
        aliases:
          - loki
    logging: *default-logging

  cassandra:
    image: bitnami/cassandra:3.11.11
    container_name: cassandra
    volumes:
      - cassandra:/bitnami
    restart: always
    healthcheck:
      test: [ "CMD", "cqlsh", "-u", "cassandra", "-p", "cassandra", "-e", "SELECT table_name FROM system_schema.tables WHERE keyspace_name='loki';" ]
      interval: 5s
      timeout: 5s
      retries: 10
    environment:
      CASSANDRA_USER: cassandra
      CASSANDRA_PASSWORD: cassandra
      CASSANDRA_CLUSTER_NAME: loki
      CASSANDRA_DATACENTER: dc1
    networks:
      loki:
        aliases:
          - cassandra
    logging: *default-logging

  promtail:
    image:  grafana/promtail:2.4.2
    container_name: promtail
    restart: always
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./docker-config.yaml:/etc/promtail/docker-config.yaml
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      loki:
        condition: service_started
    networks:
      loki:
        aliases:
          - promtail
    logging: *default-logging

  log-generator:
    image: mingrammer/flog
    restart: always
    command:
      - --loop
      - --format=json
      - --number=10
      - --delay=100ms
    depends_on:
      promtail:
        condition: service_started
    logging: *default-logging

  grafana:
    image: grafana/grafana:8.4.5
    container_name: grafana
    restart: always
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_LOG_MODE=console
      - GF_LOG_LEVEL=critical
    ports:
      - "3000:3000"
    networks:
      loki:
        aliases:
          - grafana
    depends_on:
      loki:
        condition: service_started
    volumes:
      - ./datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - grafana:/var/lib/grafana
    logging: *default-logging

volumes:
  cassandra:
  loki:
  redis_data:
  grafana:

networks:
  loki:
    driver: bridge